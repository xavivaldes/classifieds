"use strict";var ApplicationConfiguration=function(){var applicationModuleName="mean",applicationModuleVendorDependencies=["ngResource","ngAnimate","ui.router","ui.bootstrap","ui.utils","angularFileUpload"],registerModule=function(moduleName,dependencies){angular.module(moduleName,dependencies||[]),angular.module(applicationModuleName).requires.push(moduleName)};return{applicationModuleName:applicationModuleName,applicationModuleVendorDependencies:applicationModuleVendorDependencies,registerModule:registerModule}}();angular.module(ApplicationConfiguration.applicationModuleName,ApplicationConfiguration.applicationModuleVendorDependencies),angular.module(ApplicationConfiguration.applicationModuleName).config(["$locationProvider",function($locationProvider){$locationProvider.hashPrefix("!")}]),angular.element(document).ready(function(){"#_=_"===window.location.hash&&(window.location.hash="#!"),angular.bootstrap(document,[ApplicationConfiguration.applicationModuleName])}),ApplicationConfiguration.registerModule("articles"),ApplicationConfiguration.registerModule("categories"),ApplicationConfiguration.registerModule("classifieds"),ApplicationConfiguration.registerModule("core"),ApplicationConfiguration.registerModule("families"),ApplicationConfiguration.registerModule("instrumentTypes"),ApplicationConfiguration.registerModule("subcategories"),ApplicationConfiguration.registerModule("users"),angular.module("articles").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Articles","articles","dropdown","/articles(/create)?"),Menus.addSubMenuItem("topbar","articles","List Articles","articles"),Menus.addSubMenuItem("topbar","articles","New Article","articles/create")}]),angular.module("articles").config(["$stateProvider",function($stateProvider){$stateProvider.state("listArticles",{url:"/articles",templateUrl:"modules/articles/views/list-articles.client.view.html"}).state("createArticle",{url:"/articles/create",templateUrl:"modules/articles/views/create-article.client.view.html"}).state("viewArticle",{url:"/articles/:articleId",templateUrl:"modules/articles/views/view-article.client.view.html"}).state("editArticle",{url:"/articles/:articleId/edit",templateUrl:"modules/articles/views/edit-article.client.view.html"})}]),angular.module("articles").controller("ArticlesController",["$scope","$stateParams","$location","Authentication","Articles",function($scope,$stateParams,$location,Authentication,Articles){$scope.authentication=Authentication,$scope.create=function(){var article=new Articles({title:this.title,content:this.content});article.$save(function(response){$location.path("articles/"+response._id),$scope.title="",$scope.content=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(article){if(article){article.$remove();for(var i in $scope.articles)$scope.articles[i]===article&&$scope.articles.splice(i,1)}else $scope.article.$remove(function(){$location.path("articles")})},$scope.update=function(){var article=$scope.article;article.$update(function(){$location.path("articles/"+article._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.articles=Articles.query()},$scope.findOne=function(){$scope.article=Articles.get({articleId:$stateParams.articleId})}}]),angular.module("articles").factory("Articles",["$resource",function($resource){return $resource("articles/:articleId",{articleId:"@_id"},{update:{method:"PUT"}})}]),angular.module("categories").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Categories","categories","dropdown","/categories(/create)?"),Menus.addSubMenuItem("topbar","categories","List Categories","categories"),Menus.addSubMenuItem("topbar","categories","New Category","categories/create")}]),angular.module("categories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listCategories",{url:"/categories",templateUrl:"modules/categories/views/list-categories.client.view.html"}).state("createCategory",{url:"/categories/create",templateUrl:"modules/categories/views/create-category.client.view.html"}).state("viewCategory",{url:"/categories/:categoryId",templateUrl:"modules/categories/views/view-category.client.view.html"}).state("editCategory",{url:"/categories/:categoryId/edit",templateUrl:"modules/categories/views/edit-category.client.view.html"})}]),angular.module("categories").controller("CategoriesController",["$scope","$stateParams","$location","Authentication","Categories",function($scope,$stateParams,$location,Authentication,Categories){$scope.authentication=Authentication,$scope.create=function(){var category=new Categories({name:this.name});category.$save(function(response){$location.path("categories/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(category){if(category){category.$remove();for(var i in $scope.categories)$scope.categories[i]===category&&$scope.categories.splice(i,1)}else $scope.category.$remove(function(){$location.path("categories")})},$scope.update=function(){var category=$scope.category;category.$update(function(){$location.path("categories/"+category._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.categories=Categories.query()},$scope.findOne=function(){$scope.category=Categories.get({categoryId:$stateParams.categoryId})}}]),angular.module("categories").factory("Categories",["$resource",function($resource){return $resource("categories/:categoryId",{categoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("classifieds").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Classifieds","classifieds","dropdown","/classifieds(/create)?"),Menus.addSubMenuItem("topbar","classifieds","List Classifieds","classifieds"),Menus.addSubMenuItem("topbar","classifieds","New Classified","classifieds/create")}]),angular.module("classifieds").config(["$stateProvider",function($stateProvider){$stateProvider.state("listClassifieds",{url:"/classifieds",templateUrl:"modules/classifieds/views/list-classifieds.client.view.html"}).state("createClassified",{url:"/classifieds/create",templateUrl:"modules/classifieds/views/create-classified.client.view.html"}).state("viewClassified",{url:"/classifieds/:classifiedId",templateUrl:"modules/classifieds/views/view-classified.client.view.html"}).state("editClassified",{url:"/classifieds/:classifiedId/edit",templateUrl:"modules/classifieds/views/edit-classified.client.view.html"})}]),angular.module("classifieds").controller("ClassifiedsController",["$scope","$upload","$stateParams","$location","Authentication","Classifieds","Categories","Families","InstrumentTypes",function($scope,$upload,$stateParams,$location,Authentication,Classifieds,Categories,Families,InstrumentTypes){$scope.authentication=Authentication,$scope.sendClassified=function(classified,callback){var file=$scope.files[0];console.log(file),$scope.upload=$upload.upload({url:"classifieds",data:{classified:classified},file:file}).success(function(data){console.log(data),callback(data)})},$scope.create=function(){var classified=new Classifieds({shortDescription:this.shortDescription,longDescription:this.longDescription,price:this.price,category:this.category,family:this.family,instrumentType:this.instrumentType,pics:this.pics,files:this.files});$scope.sendClassified(classified,function(response){$location.path("classifieds/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(classified){if(classified){classified.$remove();for(var i in $scope.classifieds)$scope.classifieds[i]===classified&&$scope.classifieds.splice(i,1)}else $scope.classified.$remove(function(){$location.path("classifieds")})},$scope.update=function(){var classified=$scope.classified;classified.$update(function(){$location.path("classifieds/"+classified._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.classifieds=Classifieds.query()},$scope.loadAdditionalInfo=function(){$scope.categories=Categories.query(),$scope.families=Families.query()},$scope.findOne=function(){$scope.classified=Classifieds.get({classifiedId:$stateParams.classifiedId}),$scope.image="data:"+$scope.classified.pic.contentType+";base64,"+$scope.classified.pic.data},$scope.$watch("family",function(newVal){newVal&&($scope.instrumentTypes=InstrumentTypes.query({family:newVal}))}),$scope.$watch("files",function(){if($scope.files&&$scope.files.length>0){var fileReader=new FileReader;fileReader.onload=function(fileLoadedEvent){console.log(fileLoadedEvent.target.result),document.getElementById("image-preview").innerHTML='<img src="'+fileLoadedEvent.target.result+'"/>'},fileReader.readAsDataURL($scope.files[0])}})}]),angular.module("classifieds").factory("Classifieds",["$resource",function($resource){return $resource("classifieds/:classifiedId",{classifiedId:"@_id"},{update:{method:"PUT"}})}]),angular.module("core").config(["$stateProvider","$urlRouterProvider",function($stateProvider,$urlRouterProvider){$urlRouterProvider.otherwise("/"),$stateProvider.state("home",{url:"/",templateUrl:"modules/core/views/home.client.view.html"})}]),angular.module("core").controller("HeaderController",["$scope","Authentication","Menus",function($scope,Authentication,Menus){$scope.authentication=Authentication,$scope.isCollapsed=!1,$scope.menu=Menus.getMenu("topbar"),$scope.toggleCollapsibleMenu=function(){$scope.isCollapsed=!$scope.isCollapsed},$scope.$on("$stateChangeSuccess",function(){$scope.isCollapsed=!1})}]),angular.module("core").controller("HomeController",["$scope","Authentication",function($scope,Authentication){$scope.authentication=Authentication}]),angular.module("core").service("Menus",[function(){this.defaultRoles=["*"],this.menus={};var shouldRender=function(user){if(!user)return this.isPublic;if(~this.roles.indexOf("*"))return!0;for(var userRoleIndex in user.roles)for(var roleIndex in this.roles)if(this.roles[roleIndex]===user.roles[userRoleIndex])return!0;return!1};this.validateMenuExistance=function(menuId){if(menuId&&menuId.length){if(this.menus[menuId])return!0;throw new Error("Menu does not exists")}throw new Error("MenuId was not provided")},this.getMenu=function(menuId){return this.validateMenuExistance(menuId),this.menus[menuId]},this.addMenu=function(menuId,isPublic,roles){return this.menus[menuId]={isPublic:isPublic||!1,roles:roles||this.defaultRoles,items:[],shouldRender:shouldRender},this.menus[menuId]},this.removeMenu=function(menuId){this.validateMenuExistance(menuId),delete this.menus[menuId]},this.addMenuItem=function(menuId,menuItemTitle,menuItemURL,menuItemType,menuItemUIRoute,isPublic,roles,position){return this.validateMenuExistance(menuId),this.menus[menuId].items.push({title:menuItemTitle,link:menuItemURL,menuItemType:menuItemType||"item",menuItemClass:menuItemType,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].roles:roles,position:position||0,items:[],shouldRender:shouldRender}),this.menus[menuId]},this.addSubMenuItem=function(menuId,rootMenuItemURL,menuItemTitle,menuItemURL,menuItemUIRoute,isPublic,roles,position){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===rootMenuItemURL&&this.menus[menuId].items[itemIndex].items.push({title:menuItemTitle,link:menuItemURL,uiRoute:menuItemUIRoute||"/"+menuItemURL,isPublic:null===isPublic||"undefined"==typeof isPublic?this.menus[menuId].items[itemIndex].isPublic:isPublic,roles:null===roles||"undefined"==typeof roles?this.menus[menuId].items[itemIndex].roles:roles,position:position||0,shouldRender:shouldRender});return this.menus[menuId]},this.removeMenuItem=function(menuId,menuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)this.menus[menuId].items[itemIndex].link===menuItemURL&&this.menus[menuId].items.splice(itemIndex,1);return this.menus[menuId]},this.removeSubMenuItem=function(menuId,submenuItemURL){this.validateMenuExistance(menuId);for(var itemIndex in this.menus[menuId].items)for(var subitemIndex in this.menus[menuId].items[itemIndex].items)this.menus[menuId].items[itemIndex].items[subitemIndex].link===submenuItemURL&&this.menus[menuId].items[itemIndex].items.splice(subitemIndex,1);return this.menus[menuId]},this.addMenu("topbar")}]),angular.module("families").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Families","families","dropdown","/families(/create)?"),Menus.addSubMenuItem("topbar","families","List Families","families"),Menus.addSubMenuItem("topbar","families","New Family","families/create")}]),angular.module("families").config(["$stateProvider",function($stateProvider){$stateProvider.state("listFamilies",{url:"/families",templateUrl:"modules/families/views/list-families.client.view.html"}).state("createFamily",{url:"/families/create",templateUrl:"modules/families/views/create-family.client.view.html"}).state("viewFamily",{url:"/families/:familyId",templateUrl:"modules/families/views/view-family.client.view.html"}).state("editFamily",{url:"/families/:familyId/edit",templateUrl:"modules/families/views/edit-family.client.view.html"})}]),angular.module("families").controller("FamiliesController",["$scope","$stateParams","$location","Authentication","Families",function($scope,$stateParams,$location,Authentication,Families){$scope.authentication=Authentication,$scope.create=function(){var family=new Families({name:this.name});family.$save(function(response){$location.path("families/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(family){if(family){family.$remove();for(var i in $scope.families)$scope.families[i]===family&&$scope.families.splice(i,1)}else $scope.family.$remove(function(){$location.path("families")})},$scope.update=function(){var family=$scope.family;family.$update(function(){$location.path("families/"+family._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.families=Families.query()},$scope.findOne=function(){$scope.family=Families.get({familyId:$stateParams.familyId})}}]),angular.module("families").factory("Families",["$resource",function($resource){return $resource("families/:familyId",{familyId:"@_id"},{update:{method:"PUT"}})}]),angular.module("instrumentTypes").run(["Menus",function(Menus){Menus.addMenuItem("topbar","InstrumentTypes","instrumentTypes","dropdown","/instrumentTypes(/create)?"),Menus.addSubMenuItem("topbar","instrumentTypes","List InstrumentTypes","instrumentTypes"),Menus.addSubMenuItem("topbar","instrumentTypes","New InstrumentType","instrumentTypes/create")}]),angular.module("instrumentTypes").config(["$stateProvider",function($stateProvider){$stateProvider.state("listInstrumentTypes",{url:"/instrumentTypes",templateUrl:"modules/instrumentTypes/views/list-instrumentTypes.client.view.html"}).state("createInstrumentType",{url:"/instrumentTypes/create",templateUrl:"modules/instrumentTypes/views/create-instrumentType.client.view.html"}).state("viewInstrumentType",{url:"/instrumentTypes/:instrumentTypeId",templateUrl:"modules/instrumentTypes/views/view-instrumentType.client.view.html"}).state("editInstrumentType",{url:"/instrumentTypes/:instrumentTypeId/edit",templateUrl:"modules/instrumentTypes/views/edit-instrumentType.client.view.html"})}]),angular.module("instrumentTypes").controller("InstrumentTypesController",["$scope","$stateParams","$location","Authentication","InstrumentTypes","Families",function($scope,$stateParams,$location,Authentication,InstrumentTypes,Families){$scope.authentication=Authentication,$scope.create=function(){var instrumentType=new InstrumentTypes({name:this.name,family:this.family});instrumentType.$save(function(response){$location.path("instrumentTypes/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(instrumentType){if(instrumentType){instrumentType.$remove();for(var i in $scope.instrumentTypes)$scope.instrumentTypes[i]===instrumentType&&$scope.instrumentTypes.splice(i,1)}else $scope.instrumentType.$remove(function(){$location.path("instrumentTypes")})},$scope.update=function(){var instrumentType=$scope.instrumentType;instrumentType.$update(function(){$location.path("instrumentTypes/"+instrumentType._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.instrumentTypes=InstrumentTypes.query()},$scope.loadAdditionalInfo=function(){$scope.families=Families.query()},$scope.findOne=function(){$scope.instrumentType=InstrumentTypes.get({instrumentTypeId:$stateParams.instrumentTypeId})}}]),angular.module("instrumentTypes").factory("InstrumentTypes",["$resource",function($resource){return $resource("instrumentTypes/:instrumentTypeId",{instrumentTypeId:"@_id"},{update:{method:"PUT"}})}]),angular.module("subcategories").run(["Menus",function(Menus){Menus.addMenuItem("topbar","Subcategories","subcategories","dropdown","/subcategories(/create)?"),Menus.addSubMenuItem("topbar","subcategories","List Subcategories","subcategories"),Menus.addSubMenuItem("topbar","subcategories","New Subcategory","subcategories/create")}]),angular.module("subcategories").config(["$stateProvider",function($stateProvider){$stateProvider.state("listSubcategories",{url:"/subcategories",templateUrl:"modules/subcategories/views/list-subcategories.client.view.html"}).state("createSubcategory",{url:"/subcategories/create",templateUrl:"modules/subcategories/views/create-subcategory.client.view.html"}).state("viewSubcategory",{url:"/subcategories/:subcategoryId",templateUrl:"modules/subcategories/views/view-subcategory.client.view.html"}).state("editSubcategory",{url:"/subcategories/:subcategoryId/edit",templateUrl:"modules/subcategories/views/edit-subcategory.client.view.html"})}]),angular.module("subcategories").controller("SubcategoriesController",["$scope","$stateParams","$location","Authentication","Subcategories","Categories",function($scope,$stateParams,$location,Authentication,Subcategories,Categories){$scope.authentication=Authentication,$scope.create=function(){var subcategory=new Subcategories({name:this.name,category:this.category});subcategory.$save(function(response){$location.path("subcategories/"+response._id),$scope.name=""},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.remove=function(subcategory){if(subcategory){subcategory.$remove();for(var i in $scope.subcategories)$scope.subcategories[i]===subcategory&&$scope.subcategories.splice(i,1)}else $scope.subcategory.$remove(function(){$location.path("subcategories")})},$scope.update=function(){var subcategory=$scope.subcategory;subcategory.$update(function(){$location.path("subcategories/"+subcategory._id)},function(errorResponse){$scope.error=errorResponse.data.message})},$scope.find=function(){$scope.subcategories=Subcategories.query()},$scope.loadAdditionalInfo=function(){$scope.categories=Categories.query()},$scope.findOne=function(){$scope.subcategory=Subcategories.get({subcategoryId:$stateParams.subcategoryId}),this.loadAdditionalInfo()}}]),angular.module("subcategories").factory("Subcategories",["$resource",function($resource){return $resource("subcategories/:subcategoryId",{subcategoryId:"@_id"},{update:{method:"PUT"}})}]),angular.module("users").config(["$httpProvider",function($httpProvider){$httpProvider.interceptors.push(["$q","$location","Authentication",function($q,$location,Authentication){return{responseError:function(rejection){switch(rejection.status){case 401:Authentication.user=null,$location.path("signin");break;case 403:}return $q.reject(rejection)}}}])}]),angular.module("users").config(["$stateProvider",function($stateProvider){$stateProvider.state("profile",{url:"/settings/profile",templateUrl:"modules/users/views/settings/edit-profile.client.view.html"}).state("password",{url:"/settings/password",templateUrl:"modules/users/views/settings/change-password.client.view.html"}).state("accounts",{url:"/settings/accounts",templateUrl:"modules/users/views/settings/social-accounts.client.view.html"}).state("signup",{url:"/signup",templateUrl:"modules/users/views/authentication/signup.client.view.html"}).state("signin",{url:"/signin",templateUrl:"modules/users/views/authentication/signin.client.view.html"}).state("forgot",{url:"/password/forgot",templateUrl:"modules/users/views/password/forgot-password.client.view.html"}).state("reset-invalid",{url:"/password/reset/invalid",templateUrl:"modules/users/views/password/reset-password-invalid.client.view.html"}).state("reset-success",{url:"/password/reset/success",templateUrl:"modules/users/views/password/reset-password-success.client.view.html"}).state("reset",{url:"/password/reset/:token",templateUrl:"modules/users/views/password/reset-password.client.view.html"})}]),angular.module("users").controller("AuthenticationController",["$scope","$http","$location","Authentication",function($scope,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.signup=function(){$http.post("/auth/signup",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})},$scope.signin=function(){$http.post("/auth/signin",$scope.credentials).success(function(response){$scope.authentication.user=response,$location.path("/")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("PasswordController",["$scope","$stateParams","$http","$location","Authentication",function($scope,$stateParams,$http,$location,Authentication){$scope.authentication=Authentication,$scope.authentication.user&&$location.path("/"),$scope.askForPasswordReset=function(){$scope.success=$scope.error=null,$http.post("/auth/forgot",$scope.credentials).success(function(response){$scope.credentials=null,$scope.success=response.message}).error(function(response){$scope.credentials=null,$scope.error=response.message})},$scope.resetUserPassword=function(){$scope.success=$scope.error=null,$http.post("/auth/reset/"+$stateParams.token,$scope.passwordDetails).success(function(response){$scope.passwordDetails=null,Authentication.user=response,$location.path("/password/reset/success")}).error(function(response){$scope.error=response.message})}}]),angular.module("users").controller("SettingsController",["$scope","$http","$location","Users","Authentication",function($scope,$http,$location,Users,Authentication){$scope.user=Authentication.user,$scope.user||$location.path("/"),$scope.hasConnectedAdditionalSocialAccounts=function(provider){for(var i in $scope.user.additionalProvidersData)return!0;return!1},$scope.isConnectedSocialAccount=function(provider){return $scope.user.provider===provider||$scope.user.additionalProvidersData&&$scope.user.additionalProvidersData[provider]},$scope.removeUserSocialAccount=function(provider){$scope.success=$scope.error=null,$http["delete"]("/users/accounts",{params:{provider:provider}}).success(function(response){$scope.success=!0,$scope.user=Authentication.user=response}).error(function(response){$scope.error=response.message})},$scope.updateUserProfile=function(isValid){if(isValid){$scope.success=$scope.error=null;var user=new Users($scope.user);user.$update(function(response){$scope.success=!0,Authentication.user=response},function(response){$scope.error=response.data.message})}else $scope.submitted=!0},$scope.changeUserPassword=function(){$scope.success=$scope.error=null,$http.post("/users/password",$scope.passwordDetails).success(function(response){$scope.success=!0,$scope.passwordDetails=null}).error(function(response){$scope.error=response.message})}}]),angular.module("users").factory("Authentication",["$window",function($window){var auth={user:$window.user};return auth}]),angular.module("users").factory("Users",["$resource",function($resource){return $resource("users",{},{update:{method:"PUT"}})}]);